Задание 7.7.1
const person = {
    name: 'Michelle',
    age: 28
  }
  function printInfo() {
          console.log(`Name: ${this.name},\nAge: ${this.age}`);
      }
  printInfo.call(person);
  
  
Задание 7.7.2

function calculate(a, b, operator) {
    if (operator === '+') {
      return a + b
    }else if (operator === '-') {
      return a - b
    }else if (operator === '*') {
      return a * b
    }else if (operator === '/') {
      return a / b
    }
  }
  
  const numbers = {
          a: 2,
          b: 3,
    operator: '+',
      }
  
  const result = calculate.apply(null, [numbers.a, numbers.b, numbers.operator]);
  console.log(result);

Задание 7.7.3

const users = [
    { name: "John", age: 30 },
    { name: "Jane", age: 25 },
    { name: "Bob", age: 17 },
    { name: "Alice", age: 28 },
];

 const ageUser = users.filter((user) => {
        return user.age >= 18;
    });
    
    console.log(ageUser);

const nameUser = ageUser.map((user) => user.name);
    
console.log(nameUser)

Задание 7.7.4

const person = {}
function setFullName(fullName) {
  this.fullName = fullName
}
const setPersonFullName = setFullName.bind(person)
setPersonFullName("John Smith")
console.log(person.fullName)

Задание 7.7.5

function uniqueness(num){
    const uniqueSet = new Set(num);
    const uniqueNumbers = Array.from(uniqueSet);
      uniqueNumbers.sort((a, b) => a - b)
      return uniqueNumbers
    }
    const numbers = [1, 2, 1, 3, 4, 2, 5];
    const uniquenessNumbers = uniqueness(numbers);
    console.log(uniquenessNumbers);